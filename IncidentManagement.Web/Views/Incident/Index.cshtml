@model IEnumerable<IncidentManagement.Entities.Models.Incident>

@{
    ViewBag.Title = "Gestión de Incidencias";
}

<div class="container-fluid">
    <h2>@ViewBag.Title</h2>

    <div class="row mb-3">
        <div class="col-md-12">
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="fas fa-plus"></i> Nueva Incidencia
            </a>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-3">
            <select id="statusFilter" class="form-control">
                <option value="">Todos los Estados</option>
                @foreach (var status in Enum.GetValues(typeof(IncidentManagement.Entities.Models.IncidentStatus)))
                {
                    <option value="@status">@status</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select id="priorityFilter" class="form-control">
                <option value="">Todas las Prioridades</option>
                @foreach (var priority in Enum.GetValues(typeof(IncidentManagement.Entities.Models.Priority)))
                {
                    <option value="@priority">@priority</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <input type="date" id="dateFilter" class="form-control" />
        </div>
        <div class="col-md-3">
            <button id="applyFilters" class="btn btn-secondary">
                <i class="fas fa-filter"></i> Aplicar Filtros
            </button>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Título</th>
                    <th>Estado</th>
                    <th>Prioridad</th>
                    <th>Fecha</th>
                    <th>Técnico</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Title</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(item.Status)">
                                @item.Status
                            </span>
                        </td>
                        <td>
                            <span class="badge @GetPriorityBadgeClass(item.Priority)">
                                @item.Priority
                            </span>
                        </td>
                        <td>@item.CreatedDate.ToString("dd/MM/yyyy")</td>
                        <td>@(item.AssignedTechnician?.Name ?? "Sin asignar")</td>
                        <td>
                            <div class="btn-group">
                                <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-info btn-sm">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button class="btn btn-danger btn-sm delete-incident" data-id="@item.Id">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Aplicar filtros
            $('#applyFilters').click(function () {
                var status = $('#statusFilter').val();
                var priority = $('#priorityFilter').val();
                var date = $('#dateFilter').val();

                window.location.href = '@Url.Action("Index")' + '?status=' + status + '&priority=' + priority + '&date=' + date;
            });

            // Eliminar incidencia
            $('.delete-incident').click(function () {
                if (confirm('¿Está seguro de que desea eliminar esta incidencia?')) {
                    var id = $(this).data('id');
                    $.post('@Url.Action("Delete")/' + id, function () {
                        window.location.reload();
                    });
                }
            });
        });
    </script>
}

@functions {
    private string GetStatusBadgeClass(IncidentManagement.Entities.Models.IncidentStatus status)
    {
        switch (status)
        {
            case IncidentManagement.Entities.Models.IncidentStatus.Open:
                return "badge-primary";
            case IncidentManagement.Entities.Models.IncidentStatus.InProgress:
                return "badge-warning";
            case IncidentManagement.Entities.Models.IncidentStatus.Resolved:
                return "badge-success";
            case IncidentManagement.Entities.Models.IncidentStatus.Closed:
                return "badge-secondary";
            default:
                return "badge-default";
        }
    }

    private string GetPriorityBadgeClass(IncidentManagement.Entities.Models.Priority priority)
    {
        switch (priority)
        {
            case IncidentManagement.Entities.Models.Priority.Low:
                return "badge-info";
            case IncidentManagement.Entities.Models.Priority.Medium:
                return "badge-warning";
            case IncidentManagement.Entities.Models.Priority.High:
                return "badge-danger";
            case IncidentManagement.Entities.Models.Priority.Critical:
                return "badge-dark";
            default:
                return "badge-default";
        }
    }
} 